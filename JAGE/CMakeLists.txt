set(PROJECT_NAME JAGE)

################################################################################
# Source groups
################################################################################
set(no_group_source_files
    "Assets/Meshes/AbandonedCottage/cottage.mtl"
    "Assets/Meshes/AbandonedCottage/cottage.obj"
    "Assets/Meshes/default_cube.mtl"
    "Assets/Meshes/default_cube.obj"
    "Assets/Meshes/default_plane.mtl"
    "Assets/Meshes/default_plane.obj"
    "Assets/Meshes/SurvivalGuitarBackpack/backpack.mtl"
    "Assets/Meshes/SurvivalGuitarBackpack/backpack.obj"
    "Assets/Meshes/SurvivalGuitarBackpack/source_attribution.txt"
    "Assets/Shaders/blit.frag.glsl"
    "Assets/Shaders/blit.vert.glsl"
    "Assets/Shaders/camera.glsl"
    "Assets/Shaders/constants.glsl"
    "Assets/Shaders/csm.frag"
    "Assets/Shaders/csm.geom"
    "Assets/Shaders/csm.glsl"
    "Assets/Shaders/csm.vert"
    "Assets/Shaders/gaussian_blur.glsl"
    "Assets/Shaders/gaussian_blur_h.frag"
    "Assets/Shaders/gaussian_blur_v.frag"
    "Assets/Shaders/gbuffer.frag"
    "Assets/Shaders/gbuffer.frag.glsl"
    "Assets/Shaders/gbuffer.vert"
    "Assets/Shaders/lighting.frag"
    "Assets/Shaders/lighting.glsl"
    "Assets/Shaders/lighting.vert"
    "Assets/Shaders/lit_deferred.frag.glsl"
    "Assets/Shaders/meshes.glsl"
    "Assets/Shaders/null.frag.glsl"
    "Assets/Shaders/point_shadow_map.frag"
    "Assets/Shaders/point_shadow_map.geom"
    "Assets/Shaders/point_shadow_map.vert"
    "Assets/Shaders/samplers.glsl"
    "Assets/Shaders/screen.frag"
    "Assets/Shaders/screen.vert"
    "Assets/Shaders/shadow_map.frag"
    "Assets/Shaders/shadow_map.vert"
    "Assets/Shaders/shadow_map_geometry.vert.glsl"
    "Assets/Shaders/vsm.frag"
    "Assets/Shaders/vsm.vert"
    "imgui.ini"
    "ThirdParty/imgui/imgui.natstepfilter"
)
source_group("" FILES ${no_group_source_files})

set(Header_Files
    "Engine/Assets/AssetLoader.h"
    "Engine/Assets/Types/Material.h"
    "Engine/Assets/Types/StaticMesh.h"
    "Engine/Assets/Types/Texture.h"
    "Engine/Core.h"
    "Engine/Core/AssetLoader.h"
    "Engine/Core/AssetManager.h"
    "Engine/Core/Core.h"
    "Engine/Core/Types/GameAsset.h"
    "Engine/Core/Types/Material.h"
    "Engine/Core/Types/Mesh.h"
    "Engine/Core/Types/MeshModel.h"
    "Engine/Core/Types/Texture.h"
    "Engine/Defaults/Textures.h"
    "Engine/ECS/ComponentArray.h"
    "Engine/ECS/ComponentManager.h"
    "Engine/ECS/Components/Camera.h"
    "Engine/ECS/Components/DirectionalLight.h"
    "Engine/ECS/Components/PlayerMovement.h"
    "Engine/ECS/Components/PointLight.h"
    "Engine/ECS/Components/RigidBody.h"
    "Engine/ECS/Components/StaticMeshRenderer.h"
    "Engine/ECS/EntityManager.h"
    "Engine/ECS/IComponentArray.h"
    "Engine/ECS/SystemManager.h"
    "Engine/ECS/Systems/PlayerSystem.h"
    "Engine/ECS/Systems/RenderSystem.h"
    "Engine/ECS/Systems/System.h"
    "Engine/Editor/Editor.h"
    "Engine/Editor/Viewers/EntityViewer.h"
    "Engine/Editor/Widgets/Components/ComponentWidget.h"
    "Engine/Editor/Widgets/Components/TransformWidget.h"
    "Engine/Engine.h"
    "Engine/Input/KeyboardInput.h"
    "Engine/Input/MouseInput.h"
    "Engine/LogDisplay.h"
    "Engine/Logging.h"
    "Engine/Renderer/OpenGL.h"
    "Engine/Renderer/OpenGLUtils.h"
    "Engine/Renderer/ShaderPreProcessor.h"
    "Engine/Renderer/Types/Buffer.h"
    "Engine/Renderer/Types/FrameBuffer.h"
    "Engine/Renderer/Types/IBindable.h"
    "Engine/Renderer/Types/Shader.h"
    "Engine/Renderer/Types/Texture.h"
    "Engine/Renderer/Types/VertexArray.h"
    "Engine/World/World.h"
    "ThirdParty/assimp/aabb.h"
    "ThirdParty/assimp/ai_assert.h"
    "ThirdParty/assimp/anim.h"
    "ThirdParty/assimp/AssertHandler.h"
    "ThirdParty/assimp/Base64.hpp"
    "ThirdParty/assimp/BaseImporter.h"
    "ThirdParty/assimp/Bitmap.h"
    "ThirdParty/assimp/BlobIOSystem.h"
    "ThirdParty/assimp/ByteSwapper.h"
    "ThirdParty/assimp/camera.h"
    "ThirdParty/assimp/cexport.h"
    "ThirdParty/assimp/cfileio.h"
    "ThirdParty/assimp/cimport.h"
    "ThirdParty/assimp/ColladaMetaData.h"
    "ThirdParty/assimp/color4.h"
    "ThirdParty/assimp/color4.inl"
    "ThirdParty/assimp/commonMetaData.h"
    "ThirdParty/assimp/Compiler/poppack1.h"
    "ThirdParty/assimp/Compiler/pstdint.h"
    "ThirdParty/assimp/Compiler/pushpack1.h"
    "ThirdParty/assimp/config.h"
    "ThirdParty/assimp/CreateAnimMesh.h"
    "ThirdParty/assimp/DefaultIOStream.h"
    "ThirdParty/assimp/DefaultIOSystem.h"
    "ThirdParty/assimp/DefaultLogger.hpp"
    "ThirdParty/assimp/defs.h"
    "ThirdParty/assimp/Exceptional.h"
    "ThirdParty/assimp/Exporter.hpp"
    "ThirdParty/assimp/fast_atof.h"
    "ThirdParty/assimp/GenericProperty.h"
    "ThirdParty/assimp/GltfMaterial.h"
    "ThirdParty/assimp/Hash.h"
    "ThirdParty/assimp/Importer.hpp"
    "ThirdParty/assimp/importerdesc.h"
    "ThirdParty/assimp/IOStream.hpp"
    "ThirdParty/assimp/IOStreamBuffer.h"
    "ThirdParty/assimp/IOSystem.hpp"
    "ThirdParty/assimp/light.h"
    "ThirdParty/assimp/LineSplitter.h"
    "ThirdParty/assimp/LogAux.h"
    "ThirdParty/assimp/Logger.hpp"
    "ThirdParty/assimp/LogStream.hpp"
    "ThirdParty/assimp/material.h"
    "ThirdParty/assimp/material.inl"
    "ThirdParty/assimp/MathFunctions.h"
    "ThirdParty/assimp/matrix3x3.h"
    "ThirdParty/assimp/matrix3x3.inl"
    "ThirdParty/assimp/matrix4x4.h"
    "ThirdParty/assimp/matrix4x4.inl"
    "ThirdParty/assimp/MemoryIOWrapper.h"
    "ThirdParty/assimp/mesh.h"
    "ThirdParty/assimp/metadata.h"
    "ThirdParty/assimp/NullLogger.hpp"
    "ThirdParty/assimp/ObjMaterial.h"
    "ThirdParty/assimp/ParsingUtils.h"
    "ThirdParty/assimp/pbrmaterial.h"
    "ThirdParty/assimp/port/AndroidJNI/AndroidJNIIOSystem.h"
    "ThirdParty/assimp/port/AndroidJNI/BundledAssetIOSystem.h"
    "ThirdParty/assimp/postprocess.h"
    "ThirdParty/assimp/Profiler.h"
    "ThirdParty/assimp/ProgressHandler.hpp"
    "ThirdParty/assimp/qnan.h"
    "ThirdParty/assimp/quaternion.h"
    "ThirdParty/assimp/quaternion.inl"
    "ThirdParty/assimp/RemoveComments.h"
    "ThirdParty/assimp/revision.h"
    "ThirdParty/assimp/scene.h"
    "ThirdParty/assimp/SceneCombiner.h"
    "ThirdParty/assimp/SGSpatialSort.h"
    "ThirdParty/assimp/SkeletonMeshBuilder.h"
    "ThirdParty/assimp/SmallVector.h"
    "ThirdParty/assimp/SmoothingGroups.h"
    "ThirdParty/assimp/SmoothingGroups.inl"
    "ThirdParty/assimp/SpatialSort.h"
    "ThirdParty/assimp/StandardShapes.h"
    "ThirdParty/assimp/StreamReader.h"
    "ThirdParty/assimp/StreamWriter.h"
    "ThirdParty/assimp/StringComparison.h"
    "ThirdParty/assimp/StringUtils.h"
    "ThirdParty/assimp/Subdivision.h"
    "ThirdParty/assimp/texture.h"
    "ThirdParty/assimp/TinyFormatter.h"
    "ThirdParty/assimp/types.h"
    "ThirdParty/assimp/vector2.h"
    "ThirdParty/assimp/vector2.inl"
    "ThirdParty/assimp/vector3.h"
    "ThirdParty/assimp/vector3.inl"
    "ThirdParty/assimp/version.h"
    "ThirdParty/assimp/Vertex.h"
    "ThirdParty/assimp/XmlParser.h"
    "ThirdParty/assimp/XMLTools.h"
    "ThirdParty/assimp/ZipArchiveIOSystem.h"
    "ThirdParty/fmt/args.h"
    "ThirdParty/fmt/base.h"
    "ThirdParty/fmt/chrono.h"
    "ThirdParty/fmt/color.h"
    "ThirdParty/fmt/compile.h"
    "ThirdParty/fmt/core.h"
    "ThirdParty/fmt/format-inl.h"
    "ThirdParty/fmt/format.h"
    "ThirdParty/fmt/os.h"
    "ThirdParty/fmt/ostream.h"
    "ThirdParty/fmt/printf.h"
    "ThirdParty/fmt/ranges.h"
    "ThirdParty/fmt/std.h"
    "ThirdParty/fmt/xchar.h"
    "ThirdParty/glad/glad.h"
    "ThirdParty/GLFW/glfw3.h"
    "ThirdParty/GLFW/glfw3native.h"
    "ThirdParty/glm/common.hpp"
    "ThirdParty/glm/detail/_features.hpp"
    "ThirdParty/glm/detail/_fixes.hpp"
    "ThirdParty/glm/detail/_noise.hpp"
    "ThirdParty/glm/detail/_swizzle.hpp"
    "ThirdParty/glm/detail/_swizzle_func.hpp"
    "ThirdParty/glm/detail/_vectorize.hpp"
    "ThirdParty/glm/detail/compute_common.hpp"
    "ThirdParty/glm/detail/compute_vector_decl.hpp"
    "ThirdParty/glm/detail/compute_vector_relational.hpp"
    "ThirdParty/glm/detail/func_common.inl"
    "ThirdParty/glm/detail/func_common_simd.inl"
    "ThirdParty/glm/detail/func_exponential.inl"
    "ThirdParty/glm/detail/func_exponential_simd.inl"
    "ThirdParty/glm/detail/func_geometric.inl"
    "ThirdParty/glm/detail/func_geometric_simd.inl"
    "ThirdParty/glm/detail/func_integer.inl"
    "ThirdParty/glm/detail/func_integer_simd.inl"
    "ThirdParty/glm/detail/func_matrix.inl"
    "ThirdParty/glm/detail/func_matrix_simd.inl"
    "ThirdParty/glm/detail/func_packing.inl"
    "ThirdParty/glm/detail/func_packing_simd.inl"
    "ThirdParty/glm/detail/func_trigonometric.inl"
    "ThirdParty/glm/detail/func_trigonometric_simd.inl"
    "ThirdParty/glm/detail/func_vector_relational.inl"
    "ThirdParty/glm/detail/func_vector_relational_simd.inl"
    "ThirdParty/glm/detail/qualifier.hpp"
    "ThirdParty/glm/detail/setup.hpp"
    "ThirdParty/glm/detail/type_float.hpp"
    "ThirdParty/glm/detail/type_half.hpp"
    "ThirdParty/glm/detail/type_half.inl"
    "ThirdParty/glm/detail/type_mat2x2.hpp"
    "ThirdParty/glm/detail/type_mat2x2.inl"
    "ThirdParty/glm/detail/type_mat2x3.hpp"
    "ThirdParty/glm/detail/type_mat2x3.inl"
    "ThirdParty/glm/detail/type_mat2x4.hpp"
    "ThirdParty/glm/detail/type_mat2x4.inl"
    "ThirdParty/glm/detail/type_mat3x2.hpp"
    "ThirdParty/glm/detail/type_mat3x2.inl"
    "ThirdParty/glm/detail/type_mat3x3.hpp"
    "ThirdParty/glm/detail/type_mat3x3.inl"
    "ThirdParty/glm/detail/type_mat3x4.hpp"
    "ThirdParty/glm/detail/type_mat3x4.inl"
    "ThirdParty/glm/detail/type_mat4x2.hpp"
    "ThirdParty/glm/detail/type_mat4x2.inl"
    "ThirdParty/glm/detail/type_mat4x3.hpp"
    "ThirdParty/glm/detail/type_mat4x3.inl"
    "ThirdParty/glm/detail/type_mat4x4.hpp"
    "ThirdParty/glm/detail/type_mat4x4.inl"
    "ThirdParty/glm/detail/type_mat4x4_simd.inl"
    "ThirdParty/glm/detail/type_quat.hpp"
    "ThirdParty/glm/detail/type_quat.inl"
    "ThirdParty/glm/detail/type_quat_simd.inl"
    "ThirdParty/glm/detail/type_vec1.hpp"
    "ThirdParty/glm/detail/type_vec1.inl"
    "ThirdParty/glm/detail/type_vec2.hpp"
    "ThirdParty/glm/detail/type_vec2.inl"
    "ThirdParty/glm/detail/type_vec3.hpp"
    "ThirdParty/glm/detail/type_vec3.inl"
    "ThirdParty/glm/detail/type_vec4.hpp"
    "ThirdParty/glm/detail/type_vec4.inl"
    "ThirdParty/glm/detail/type_vec4_simd.inl"
    "ThirdParty/glm/exponential.hpp"
    "ThirdParty/glm/ext.hpp"
    "ThirdParty/glm/ext/_matrix_vectorize.hpp"
    "ThirdParty/glm/ext/matrix_clip_space.hpp"
    "ThirdParty/glm/ext/matrix_clip_space.inl"
    "ThirdParty/glm/ext/matrix_common.hpp"
    "ThirdParty/glm/ext/matrix_common.inl"
    "ThirdParty/glm/ext/matrix_double2x2.hpp"
    "ThirdParty/glm/ext/matrix_double2x2_precision.hpp"
    "ThirdParty/glm/ext/matrix_double2x3.hpp"
    "ThirdParty/glm/ext/matrix_double2x3_precision.hpp"
    "ThirdParty/glm/ext/matrix_double2x4.hpp"
    "ThirdParty/glm/ext/matrix_double2x4_precision.hpp"
    "ThirdParty/glm/ext/matrix_double3x2.hpp"
    "ThirdParty/glm/ext/matrix_double3x2_precision.hpp"
    "ThirdParty/glm/ext/matrix_double3x3.hpp"
    "ThirdParty/glm/ext/matrix_double3x3_precision.hpp"
    "ThirdParty/glm/ext/matrix_double3x4.hpp"
    "ThirdParty/glm/ext/matrix_double3x4_precision.hpp"
    "ThirdParty/glm/ext/matrix_double4x2.hpp"
    "ThirdParty/glm/ext/matrix_double4x2_precision.hpp"
    "ThirdParty/glm/ext/matrix_double4x3.hpp"
    "ThirdParty/glm/ext/matrix_double4x3_precision.hpp"
    "ThirdParty/glm/ext/matrix_double4x4.hpp"
    "ThirdParty/glm/ext/matrix_double4x4_precision.hpp"
    "ThirdParty/glm/ext/matrix_float2x2.hpp"
    "ThirdParty/glm/ext/matrix_float2x2_precision.hpp"
    "ThirdParty/glm/ext/matrix_float2x3.hpp"
    "ThirdParty/glm/ext/matrix_float2x3_precision.hpp"
    "ThirdParty/glm/ext/matrix_float2x4.hpp"
    "ThirdParty/glm/ext/matrix_float2x4_precision.hpp"
    "ThirdParty/glm/ext/matrix_float3x2.hpp"
    "ThirdParty/glm/ext/matrix_float3x2_precision.hpp"
    "ThirdParty/glm/ext/matrix_float3x3.hpp"
    "ThirdParty/glm/ext/matrix_float3x3_precision.hpp"
    "ThirdParty/glm/ext/matrix_float3x4.hpp"
    "ThirdParty/glm/ext/matrix_float3x4_precision.hpp"
    "ThirdParty/glm/ext/matrix_float4x2.hpp"
    "ThirdParty/glm/ext/matrix_float4x2_precision.hpp"
    "ThirdParty/glm/ext/matrix_float4x3.hpp"
    "ThirdParty/glm/ext/matrix_float4x3_precision.hpp"
    "ThirdParty/glm/ext/matrix_float4x4.hpp"
    "ThirdParty/glm/ext/matrix_float4x4_precision.hpp"
    "ThirdParty/glm/ext/matrix_int2x2.hpp"
    "ThirdParty/glm/ext/matrix_int2x2_sized.hpp"
    "ThirdParty/glm/ext/matrix_int2x3.hpp"
    "ThirdParty/glm/ext/matrix_int2x3_sized.hpp"
    "ThirdParty/glm/ext/matrix_int2x4.hpp"
    "ThirdParty/glm/ext/matrix_int2x4_sized.hpp"
    "ThirdParty/glm/ext/matrix_int3x2.hpp"
    "ThirdParty/glm/ext/matrix_int3x2_sized.hpp"
    "ThirdParty/glm/ext/matrix_int3x3.hpp"
    "ThirdParty/glm/ext/matrix_int3x3_sized.hpp"
    "ThirdParty/glm/ext/matrix_int3x4.hpp"
    "ThirdParty/glm/ext/matrix_int3x4_sized.hpp"
    "ThirdParty/glm/ext/matrix_int4x2.hpp"
    "ThirdParty/glm/ext/matrix_int4x2_sized.hpp"
    "ThirdParty/glm/ext/matrix_int4x3.hpp"
    "ThirdParty/glm/ext/matrix_int4x3_sized.hpp"
    "ThirdParty/glm/ext/matrix_int4x4.hpp"
    "ThirdParty/glm/ext/matrix_int4x4_sized.hpp"
    "ThirdParty/glm/ext/matrix_integer.hpp"
    "ThirdParty/glm/ext/matrix_integer.inl"
    "ThirdParty/glm/ext/matrix_projection.hpp"
    "ThirdParty/glm/ext/matrix_projection.inl"
    "ThirdParty/glm/ext/matrix_relational.hpp"
    "ThirdParty/glm/ext/matrix_relational.inl"
    "ThirdParty/glm/ext/matrix_transform.hpp"
    "ThirdParty/glm/ext/matrix_transform.inl"
    "ThirdParty/glm/ext/matrix_uint2x2.hpp"
    "ThirdParty/glm/ext/matrix_uint2x2_sized.hpp"
    "ThirdParty/glm/ext/matrix_uint2x3.hpp"
    "ThirdParty/glm/ext/matrix_uint2x3_sized.hpp"
    "ThirdParty/glm/ext/matrix_uint2x4.hpp"
    "ThirdParty/glm/ext/matrix_uint2x4_sized.hpp"
    "ThirdParty/glm/ext/matrix_uint3x2.hpp"
    "ThirdParty/glm/ext/matrix_uint3x2_sized.hpp"
    "ThirdParty/glm/ext/matrix_uint3x3.hpp"
    "ThirdParty/glm/ext/matrix_uint3x3_sized.hpp"
    "ThirdParty/glm/ext/matrix_uint3x4.hpp"
    "ThirdParty/glm/ext/matrix_uint3x4_sized.hpp"
    "ThirdParty/glm/ext/matrix_uint4x2.hpp"
    "ThirdParty/glm/ext/matrix_uint4x2_sized.hpp"
    "ThirdParty/glm/ext/matrix_uint4x3.hpp"
    "ThirdParty/glm/ext/matrix_uint4x3_sized.hpp"
    "ThirdParty/glm/ext/matrix_uint4x4.hpp"
    "ThirdParty/glm/ext/matrix_uint4x4_sized.hpp"
    "ThirdParty/glm/ext/quaternion_common.hpp"
    "ThirdParty/glm/ext/quaternion_common.inl"
    "ThirdParty/glm/ext/quaternion_common_simd.inl"
    "ThirdParty/glm/ext/quaternion_double.hpp"
    "ThirdParty/glm/ext/quaternion_double_precision.hpp"
    "ThirdParty/glm/ext/quaternion_exponential.hpp"
    "ThirdParty/glm/ext/quaternion_exponential.inl"
    "ThirdParty/glm/ext/quaternion_float.hpp"
    "ThirdParty/glm/ext/quaternion_float_precision.hpp"
    "ThirdParty/glm/ext/quaternion_geometric.hpp"
    "ThirdParty/glm/ext/quaternion_geometric.inl"
    "ThirdParty/glm/ext/quaternion_relational.hpp"
    "ThirdParty/glm/ext/quaternion_relational.inl"
    "ThirdParty/glm/ext/quaternion_transform.hpp"
    "ThirdParty/glm/ext/quaternion_transform.inl"
    "ThirdParty/glm/ext/quaternion_trigonometric.hpp"
    "ThirdParty/glm/ext/quaternion_trigonometric.inl"
    "ThirdParty/glm/ext/scalar_common.hpp"
    "ThirdParty/glm/ext/scalar_common.inl"
    "ThirdParty/glm/ext/scalar_constants.hpp"
    "ThirdParty/glm/ext/scalar_constants.inl"
    "ThirdParty/glm/ext/scalar_int_sized.hpp"
    "ThirdParty/glm/ext/scalar_integer.hpp"
    "ThirdParty/glm/ext/scalar_integer.inl"
    "ThirdParty/glm/ext/scalar_packing.hpp"
    "ThirdParty/glm/ext/scalar_packing.inl"
    "ThirdParty/glm/ext/scalar_reciprocal.hpp"
    "ThirdParty/glm/ext/scalar_reciprocal.inl"
    "ThirdParty/glm/ext/scalar_relational.hpp"
    "ThirdParty/glm/ext/scalar_relational.inl"
    "ThirdParty/glm/ext/scalar_uint_sized.hpp"
    "ThirdParty/glm/ext/scalar_ulp.hpp"
    "ThirdParty/glm/ext/scalar_ulp.inl"
    "ThirdParty/glm/ext/vector_bool1.hpp"
    "ThirdParty/glm/ext/vector_bool1_precision.hpp"
    "ThirdParty/glm/ext/vector_bool2.hpp"
    "ThirdParty/glm/ext/vector_bool2_precision.hpp"
    "ThirdParty/glm/ext/vector_bool3.hpp"
    "ThirdParty/glm/ext/vector_bool3_precision.hpp"
    "ThirdParty/glm/ext/vector_bool4.hpp"
    "ThirdParty/glm/ext/vector_bool4_precision.hpp"
    "ThirdParty/glm/ext/vector_common.hpp"
    "ThirdParty/glm/ext/vector_common.inl"
    "ThirdParty/glm/ext/vector_double1.hpp"
    "ThirdParty/glm/ext/vector_double1_precision.hpp"
    "ThirdParty/glm/ext/vector_double2.hpp"
    "ThirdParty/glm/ext/vector_double2_precision.hpp"
    "ThirdParty/glm/ext/vector_double3.hpp"
    "ThirdParty/glm/ext/vector_double3_precision.hpp"
    "ThirdParty/glm/ext/vector_double4.hpp"
    "ThirdParty/glm/ext/vector_double4_precision.hpp"
    "ThirdParty/glm/ext/vector_float1.hpp"
    "ThirdParty/glm/ext/vector_float1_precision.hpp"
    "ThirdParty/glm/ext/vector_float2.hpp"
    "ThirdParty/glm/ext/vector_float2_precision.hpp"
    "ThirdParty/glm/ext/vector_float3.hpp"
    "ThirdParty/glm/ext/vector_float3_precision.hpp"
    "ThirdParty/glm/ext/vector_float4.hpp"
    "ThirdParty/glm/ext/vector_float4_precision.hpp"
    "ThirdParty/glm/ext/vector_int1.hpp"
    "ThirdParty/glm/ext/vector_int1_sized.hpp"
    "ThirdParty/glm/ext/vector_int2.hpp"
    "ThirdParty/glm/ext/vector_int2_sized.hpp"
    "ThirdParty/glm/ext/vector_int3.hpp"
    "ThirdParty/glm/ext/vector_int3_sized.hpp"
    "ThirdParty/glm/ext/vector_int4.hpp"
    "ThirdParty/glm/ext/vector_int4_sized.hpp"
    "ThirdParty/glm/ext/vector_integer.hpp"
    "ThirdParty/glm/ext/vector_integer.inl"
    "ThirdParty/glm/ext/vector_packing.hpp"
    "ThirdParty/glm/ext/vector_packing.inl"
    "ThirdParty/glm/ext/vector_reciprocal.hpp"
    "ThirdParty/glm/ext/vector_reciprocal.inl"
    "ThirdParty/glm/ext/vector_relational.hpp"
    "ThirdParty/glm/ext/vector_relational.inl"
    "ThirdParty/glm/ext/vector_uint1.hpp"
    "ThirdParty/glm/ext/vector_uint1_sized.hpp"
    "ThirdParty/glm/ext/vector_uint2.hpp"
    "ThirdParty/glm/ext/vector_uint2_sized.hpp"
    "ThirdParty/glm/ext/vector_uint3.hpp"
    "ThirdParty/glm/ext/vector_uint3_sized.hpp"
    "ThirdParty/glm/ext/vector_uint4.hpp"
    "ThirdParty/glm/ext/vector_uint4_sized.hpp"
    "ThirdParty/glm/ext/vector_ulp.hpp"
    "ThirdParty/glm/ext/vector_ulp.inl"
    "ThirdParty/glm/fwd.hpp"
    "ThirdParty/glm/geometric.hpp"
    "ThirdParty/glm/glm.hpp"
    "ThirdParty/glm/gtc/bitfield.hpp"
    "ThirdParty/glm/gtc/bitfield.inl"
    "ThirdParty/glm/gtc/color_space.hpp"
    "ThirdParty/glm/gtc/color_space.inl"
    "ThirdParty/glm/gtc/constants.hpp"
    "ThirdParty/glm/gtc/constants.inl"
    "ThirdParty/glm/gtc/epsilon.hpp"
    "ThirdParty/glm/gtc/epsilon.inl"
    "ThirdParty/glm/gtc/integer.hpp"
    "ThirdParty/glm/gtc/integer.inl"
    "ThirdParty/glm/gtc/matrix_access.hpp"
    "ThirdParty/glm/gtc/matrix_access.inl"
    "ThirdParty/glm/gtc/matrix_integer.hpp"
    "ThirdParty/glm/gtc/matrix_inverse.hpp"
    "ThirdParty/glm/gtc/matrix_inverse.inl"
    "ThirdParty/glm/gtc/matrix_transform.hpp"
    "ThirdParty/glm/gtc/matrix_transform.inl"
    "ThirdParty/glm/gtc/noise.hpp"
    "ThirdParty/glm/gtc/noise.inl"
    "ThirdParty/glm/gtc/packing.hpp"
    "ThirdParty/glm/gtc/packing.inl"
    "ThirdParty/glm/gtc/quaternion.hpp"
    "ThirdParty/glm/gtc/quaternion.inl"
    "ThirdParty/glm/gtc/quaternion_simd.inl"
    "ThirdParty/glm/gtc/random.hpp"
    "ThirdParty/glm/gtc/random.inl"
    "ThirdParty/glm/gtc/reciprocal.hpp"
    "ThirdParty/glm/gtc/round.hpp"
    "ThirdParty/glm/gtc/round.inl"
    "ThirdParty/glm/gtc/type_aligned.hpp"
    "ThirdParty/glm/gtc/type_precision.hpp"
    "ThirdParty/glm/gtc/type_precision.inl"
    "ThirdParty/glm/gtc/type_ptr.hpp"
    "ThirdParty/glm/gtc/type_ptr.inl"
    "ThirdParty/glm/gtc/ulp.hpp"
    "ThirdParty/glm/gtc/ulp.inl"
    "ThirdParty/glm/gtc/vec1.hpp"
    "ThirdParty/glm/gtx/associated_min_max.hpp"
    "ThirdParty/glm/gtx/associated_min_max.inl"
    "ThirdParty/glm/gtx/bit.hpp"
    "ThirdParty/glm/gtx/bit.inl"
    "ThirdParty/glm/gtx/closest_point.hpp"
    "ThirdParty/glm/gtx/closest_point.inl"
    "ThirdParty/glm/gtx/color_encoding.hpp"
    "ThirdParty/glm/gtx/color_encoding.inl"
    "ThirdParty/glm/gtx/color_space.hpp"
    "ThirdParty/glm/gtx/color_space.inl"
    "ThirdParty/glm/gtx/color_space_YCoCg.hpp"
    "ThirdParty/glm/gtx/color_space_YCoCg.inl"
    "ThirdParty/glm/gtx/common.hpp"
    "ThirdParty/glm/gtx/common.inl"
    "ThirdParty/glm/gtx/compatibility.hpp"
    "ThirdParty/glm/gtx/compatibility.inl"
    "ThirdParty/glm/gtx/component_wise.hpp"
    "ThirdParty/glm/gtx/component_wise.inl"
    "ThirdParty/glm/gtx/dual_quaternion.hpp"
    "ThirdParty/glm/gtx/dual_quaternion.inl"
    "ThirdParty/glm/gtx/easing.hpp"
    "ThirdParty/glm/gtx/easing.inl"
    "ThirdParty/glm/gtx/euler_angles.hpp"
    "ThirdParty/glm/gtx/euler_angles.inl"
    "ThirdParty/glm/gtx/extend.hpp"
    "ThirdParty/glm/gtx/extend.inl"
    "ThirdParty/glm/gtx/extended_min_max.hpp"
    "ThirdParty/glm/gtx/extended_min_max.inl"
    "ThirdParty/glm/gtx/exterior_product.hpp"
    "ThirdParty/glm/gtx/exterior_product.inl"
    "ThirdParty/glm/gtx/fast_exponential.hpp"
    "ThirdParty/glm/gtx/fast_exponential.inl"
    "ThirdParty/glm/gtx/fast_square_root.hpp"
    "ThirdParty/glm/gtx/fast_square_root.inl"
    "ThirdParty/glm/gtx/fast_trigonometry.hpp"
    "ThirdParty/glm/gtx/fast_trigonometry.inl"
    "ThirdParty/glm/gtx/float_notmalize.inl"
    "ThirdParty/glm/gtx/functions.hpp"
    "ThirdParty/glm/gtx/functions.inl"
    "ThirdParty/glm/gtx/gradient_paint.hpp"
    "ThirdParty/glm/gtx/gradient_paint.inl"
    "ThirdParty/glm/gtx/handed_coordinate_space.hpp"
    "ThirdParty/glm/gtx/handed_coordinate_space.inl"
    "ThirdParty/glm/gtx/hash.hpp"
    "ThirdParty/glm/gtx/hash.inl"
    "ThirdParty/glm/gtx/integer.hpp"
    "ThirdParty/glm/gtx/integer.inl"
    "ThirdParty/glm/gtx/intersect.hpp"
    "ThirdParty/glm/gtx/intersect.inl"
    "ThirdParty/glm/gtx/io.hpp"
    "ThirdParty/glm/gtx/io.inl"
    "ThirdParty/glm/gtx/log_base.hpp"
    "ThirdParty/glm/gtx/log_base.inl"
    "ThirdParty/glm/gtx/matrix_cross_product.hpp"
    "ThirdParty/glm/gtx/matrix_cross_product.inl"
    "ThirdParty/glm/gtx/matrix_decompose.hpp"
    "ThirdParty/glm/gtx/matrix_decompose.inl"
    "ThirdParty/glm/gtx/matrix_factorisation.hpp"
    "ThirdParty/glm/gtx/matrix_factorisation.inl"
    "ThirdParty/glm/gtx/matrix_interpolation.hpp"
    "ThirdParty/glm/gtx/matrix_interpolation.inl"
    "ThirdParty/glm/gtx/matrix_major_storage.hpp"
    "ThirdParty/glm/gtx/matrix_major_storage.inl"
    "ThirdParty/glm/gtx/matrix_operation.hpp"
    "ThirdParty/glm/gtx/matrix_operation.inl"
    "ThirdParty/glm/gtx/matrix_query.hpp"
    "ThirdParty/glm/gtx/matrix_query.inl"
    "ThirdParty/glm/gtx/matrix_transform_2d.hpp"
    "ThirdParty/glm/gtx/matrix_transform_2d.inl"
    "ThirdParty/glm/gtx/mixed_product.hpp"
    "ThirdParty/glm/gtx/mixed_product.inl"
    "ThirdParty/glm/gtx/norm.hpp"
    "ThirdParty/glm/gtx/norm.inl"
    "ThirdParty/glm/gtx/normal.hpp"
    "ThirdParty/glm/gtx/normal.inl"
    "ThirdParty/glm/gtx/normalize_dot.hpp"
    "ThirdParty/glm/gtx/normalize_dot.inl"
    "ThirdParty/glm/gtx/number_precision.hpp"
    "ThirdParty/glm/gtx/optimum_pow.hpp"
    "ThirdParty/glm/gtx/optimum_pow.inl"
    "ThirdParty/glm/gtx/orthonormalize.hpp"
    "ThirdParty/glm/gtx/orthonormalize.inl"
    "ThirdParty/glm/gtx/pca.hpp"
    "ThirdParty/glm/gtx/pca.inl"
    "ThirdParty/glm/gtx/perpendicular.hpp"
    "ThirdParty/glm/gtx/perpendicular.inl"
    "ThirdParty/glm/gtx/polar_coordinates.hpp"
    "ThirdParty/glm/gtx/polar_coordinates.inl"
    "ThirdParty/glm/gtx/projection.hpp"
    "ThirdParty/glm/gtx/projection.inl"
    "ThirdParty/glm/gtx/quaternion.hpp"
    "ThirdParty/glm/gtx/quaternion.inl"
    "ThirdParty/glm/gtx/range.hpp"
    "ThirdParty/glm/gtx/raw_data.hpp"
    "ThirdParty/glm/gtx/raw_data.inl"
    "ThirdParty/glm/gtx/rotate_normalized_axis.hpp"
    "ThirdParty/glm/gtx/rotate_normalized_axis.inl"
    "ThirdParty/glm/gtx/rotate_vector.hpp"
    "ThirdParty/glm/gtx/rotate_vector.inl"
    "ThirdParty/glm/gtx/scalar_multiplication.hpp"
    "ThirdParty/glm/gtx/scalar_relational.hpp"
    "ThirdParty/glm/gtx/scalar_relational.inl"
    "ThirdParty/glm/gtx/spline.hpp"
    "ThirdParty/glm/gtx/spline.inl"
    "ThirdParty/glm/gtx/std_based_type.hpp"
    "ThirdParty/glm/gtx/std_based_type.inl"
    "ThirdParty/glm/gtx/string_cast.hpp"
    "ThirdParty/glm/gtx/string_cast.inl"
    "ThirdParty/glm/gtx/texture.hpp"
    "ThirdParty/glm/gtx/texture.inl"
    "ThirdParty/glm/gtx/transform.hpp"
    "ThirdParty/glm/gtx/transform.inl"
    "ThirdParty/glm/gtx/transform2.hpp"
    "ThirdParty/glm/gtx/transform2.inl"
    "ThirdParty/glm/gtx/type_aligned.hpp"
    "ThirdParty/glm/gtx/type_aligned.inl"
    "ThirdParty/glm/gtx/type_trait.hpp"
    "ThirdParty/glm/gtx/type_trait.inl"
    "ThirdParty/glm/gtx/vec_swizzle.hpp"
    "ThirdParty/glm/gtx/vector_angle.hpp"
    "ThirdParty/glm/gtx/vector_angle.inl"
    "ThirdParty/glm/gtx/vector_query.hpp"
    "ThirdParty/glm/gtx/vector_query.inl"
    "ThirdParty/glm/gtx/wrap.hpp"
    "ThirdParty/glm/gtx/wrap.inl"
    "ThirdParty/glm/integer.hpp"
    "ThirdParty/glm/mat2x2.hpp"
    "ThirdParty/glm/mat2x3.hpp"
    "ThirdParty/glm/mat2x4.hpp"
    "ThirdParty/glm/mat3x2.hpp"
    "ThirdParty/glm/mat3x3.hpp"
    "ThirdParty/glm/mat3x4.hpp"
    "ThirdParty/glm/mat4x2.hpp"
    "ThirdParty/glm/mat4x3.hpp"
    "ThirdParty/glm/mat4x4.hpp"
    "ThirdParty/glm/matrix.hpp"
    "ThirdParty/glm/packing.hpp"
    "ThirdParty/glm/simd/common.h"
    "ThirdParty/glm/simd/exponential.h"
    "ThirdParty/glm/simd/geometric.h"
    "ThirdParty/glm/simd/integer.h"
    "ThirdParty/glm/simd/matrix.h"
    "ThirdParty/glm/simd/neon.h"
    "ThirdParty/glm/simd/packing.h"
    "ThirdParty/glm/simd/platform.h"
    "ThirdParty/glm/simd/trigonometric.h"
    "ThirdParty/glm/simd/vector_relational.h"
    "ThirdParty/glm/trigonometric.hpp"
    "ThirdParty/glm/vec2.hpp"
    "ThirdParty/glm/vec3.hpp"
    "ThirdParty/glm/vec4.hpp"
    "ThirdParty/glm/vector_relational.hpp"
    "ThirdParty/imgui/imconfig.h"
    "ThirdParty/imgui/imgui.h"
    "ThirdParty/imgui/imgui_impl_glfw.h"
    "ThirdParty/imgui/imgui_impl_opengl3.h"
    "ThirdParty/imgui/imgui_impl_opengl3_loader.h"
    "ThirdParty/imgui/imgui_internal.h"
    "ThirdParty/imgui/imstb_rectpack.h"
    "ThirdParty/imgui/imstb_textedit.h"
    "ThirdParty/imgui/imstb_truetype.h"
    "ThirdParty/KHR/khrplatform.h"
    "ThirdParty/stb/stb_image.h"
)
source_group("Header Files" FILES ${Header_Files})

set(Resource_Files
    "Assets/Meshes/AbandonedCottage/diffuse.png"
    "Assets/Meshes/AbandonedCottage/normal.png"
    "Assets/Meshes/SurvivalGuitarBackpack/ao.jpg"
    "Assets/Meshes/SurvivalGuitarBackpack/diffuse.jpg"
    "Assets/Meshes/SurvivalGuitarBackpack/normal.png"
    "Assets/Meshes/SurvivalGuitarBackpack/roughness.jpg"
    "Assets/Meshes/SurvivalGuitarBackpack/specular.jpg"
)
source_group("Resource Files" FILES ${Resource_Files})

set(Shaders
    "Assets/Shaders/static_geometry.vert.glsl"
    "Assets/Shaders/unlit_deferred.frag.glsl"
)
source_group("Shaders" FILES ${Shaders})

set(Source_Files
    "Engine/Core/AssetLoader.cpp"
    "Engine/Defaults/Models.h"
    "Engine/ECS/ComponentManager.cpp"
    "Engine/ECS/Components/Transform.h"
    "Engine/ECS/SystemManager.cpp"
    "Engine/ECS/Systems/PhysicsSystem.cpp"
    "Engine/ECS/Systems/PhysicsSystem.h"
    "Engine/ECS/Systems/PlayerSystem.cpp"
    "Engine/ECS/Systems/RenderSystem.cpp"
    "Engine/Editor/Editor.cpp"
    "Engine/Engine.cpp"
    "Engine/Input/KeyboardInput.cpp"
    "Engine/Input/MouseInput.cpp"
    "Engine/Renderer/OpenGL.cpp"
    "Engine/Utils.h"
    "Engine/World/World.cpp"
    "main.cpp"
    "ThirdParty/glad/glad.c"
    "ThirdParty/glm/detail/glm.cpp"
    "ThirdParty/glm/glm.cppm"
    "ThirdParty/imgui/imgui.cpp"
    "ThirdParty/imgui/imgui_demo.cpp"
    "ThirdParty/imgui/imgui_draw.cpp"
    "ThirdParty/imgui/imgui_impl_glfw.cpp"
    "ThirdParty/imgui/imgui_impl_opengl3.cpp"
    "ThirdParty/imgui/imgui_tables.cpp"
    "ThirdParty/imgui/imgui_widgets.cpp"
    "ThirdParty/stb/stb_image.cpp"
)
source_group("Source Files" FILES ${Source_Files})

set(ALL_FILES
    ${no_group_source_files}
    ${Header_Files}
    ${Resource_Files}
    ${Shaders}
    ${Source_Files}
)

################################################################################
# Target
################################################################################
add_executable(${PROJECT_NAME} ${ALL_FILES})

use_props(${PROJECT_NAME} "${CMAKE_CONFIGURATION_TYPES}" "${DEFAULT_CXX_PROPS}")
set(ROOT_NAMESPACE JAGE)

set_target_properties(${PROJECT_NAME} PROPERTIES
    VS_GLOBAL_KEYWORD "Win32Proj"
)
if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    set_target_properties(${PROJECT_NAME} PROPERTIES
        INTERPROCEDURAL_OPTIMIZATION_RELEASE "TRUE"
    )
elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x86")
    set_target_properties(${PROJECT_NAME} PROPERTIES
        INTERPROCEDURAL_OPTIMIZATION_RELEASE "TRUE"
    )
endif()
################################################################################
# Compile definitions
################################################################################
if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    target_compile_definitions(${PROJECT_NAME} PRIVATE
        "$<$<CONFIG:Debug>:"
            "_DEBUG"
        ">"
        "$<$<CONFIG:Release>:"
            "NDEBUG"
        ">"
        "_CONSOLE;"
        "UNICODE;"
        "_UNICODE"
    )
elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x86")
    target_compile_definitions(${PROJECT_NAME} PRIVATE
        "$<$<CONFIG:Debug>:"
            "_DEBUG"
        ">"
        "$<$<CONFIG:Release>:"
            "NDEBUG"
        ">"
        "WIN32;"
        "_CONSOLE;"
        "UNICODE;"
        "_UNICODE"
    )
endif()

################################################################################
# Compile and link options
################################################################################
if(MSVC)
    if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
        target_compile_options(${PROJECT_NAME} PRIVATE
            $<$<CONFIG:Debug>:
                /MP;
                /utf-8;
                /Y-
            >
            $<$<CONFIG:Release>:
                /Oi;
                /Gy
            >
            /permissive-;
            /sdl;
            /W3;
            ${DEFAULT_CXX_DEBUG_INFORMATION_FORMAT};
            ${DEFAULT_CXX_EXCEPTION_HANDLING}
        )
    elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x86")
        target_compile_options(${PROJECT_NAME} PRIVATE
            $<$<CONFIG:Release>:
                /Oi;
                /Gy
            >
            /permissive-;
            /sdl;
            /W3;
            ${DEFAULT_CXX_DEBUG_INFORMATION_FORMAT};
            ${DEFAULT_CXX_EXCEPTION_HANDLING}
        )
    endif()
    if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
        target_link_options(${PROJECT_NAME} PRIVATE
            $<$<CONFIG:Debug>:
                /DEBUG:FASTLINK
            >
            $<$<CONFIG:Release>:
                /DEBUG;
                /OPT:REF;
                /OPT:ICF
            >
            /SUBSYSTEM:CONSOLE
        )
    elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x86")
        target_link_options(${PROJECT_NAME} PRIVATE
            $<$<CONFIG:Release>:
                /OPT:REF;
                /OPT:ICF
            >
            /DEBUG;
            /SUBSYSTEM:CONSOLE
        )
    endif()
endif()

################################################################################
# Pre build events
################################################################################
if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    add_custom_command_if(
        TARGET ${PROJECT_NAME}
        PRE_BUILD
        COMMANDS
        COMMAND   $<CONFIG:Debug> rem Create main Assets folder (only if it doesn't exist)
        COMMAND   $<CONFIG:Debug> if not exist "${OUTPUT_DIRECTORY}Assets" mkdir "${OUTPUT_DIRECTORY}Assets"
        COMMAND   $<CONFIG:Debug> rem Create Shaders folder and copy shader files
        COMMAND   $<CONFIG:Debug> if not exist "${OUTPUT_DIRECTORY}Assets\\Shaders" mkdir "${OUTPUT_DIRECTORY}Assets\\Shaders"
        COMMAND   $<CONFIG:Debug> xcopy /E /I /Y "$<SHELL_PATH:${CMAKE_CURRENT_SOURCE_DIR}/>Assets\\Shaders\\*" "${OUTPUT_DIRECTORY}Assets\\Shaders\\"
        COMMAND   $<CONFIG:Debug> rem Create Meshes folder and copy mesh files
        COMMAND   $<CONFIG:Debug> if not exist "${OUTPUT_DIRECTORY}Assets\\Meshes" mkdir "${OUTPUT_DIRECTORY}Assets\\Meshes"
        COMMAND   $<CONFIG:Debug> xcopy /E /I /Y "$<SHELL_PATH:${CMAKE_CURRENT_SOURCE_DIR}/>Assets\\Meshes\\*" "${OUTPUT_DIRECTORY}Assets\\Meshes\\"
    )
endif()

################################################################################
# Dependencies
################################################################################
if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    set(ADDITIONAL_LIBRARY_DEPENDENCIES
        "$<$<CONFIG:Debug>:"
            "assimp-vc143-mt;"
            "glfw3"
        ">"
    )
endif()
target_link_libraries(${PROJECT_NAME} PRIVATE "${ADDITIONAL_LIBRARY_DEPENDENCIES}")

